{
  "name": "I2U2 Cosmic Ray eLab api",
  "tagline": "A simple way to search and retrieve data from the world's largest Cosmic Ray Database",
  "body": "# Cosmic Ray eLab API v1\r\n### Thomas Hein\r\n\r\n---\r\n\r\nThis is an API written for the Cosmic Ray eLab to provied an easier way of searching and downloading data files.\r\n\r\n## Setup\r\n\r\n1. Rename the `config.sample.php` file and change it `config.php`\r\n2. Set the $data_location variable to the correct location of the data directory\r\n3. Set the database credentials to their appropriate values\r\n4. Execute the createTables.sql in your database to create the table for the API\r\n5. Run the buildFileDatabase.php in your browser. Note: This process may take time and you may have to increase php's [max execution time](https://php.net/manual/en/info.configuration.php#ini.max-execution-time) located in your php.ini file - when this completes, you should see a message displaying the number of files added to the table without any errors\r\n\r\n# How to use\r\n\r\nThis API uses the JSON format on returning information regarless of the informaion (with the execption of downloading files and really big errors on the server's end). Each part of the API uses this basic structure:\r\n\r\n```\r\n{\r\n\trequest: {\r\n\t\tpass: \"true\"\r\n\t},\r\n\tmain: {\r\n\t\tsearchfiles: \"true\"\r\n}\r\n```\r\n\r\nAlways check if `pass` in the `request` object is true. If it is not, there will be a message after `pass` displaying an error.\r\n\r\nEvery part of this API uses the GET method. For example, a request for searching files may look like this: `/v1/searchfiles.php?detectorid=6147&year=2010&startmonthday=0415&endmonthday=1208`.\r\n\r\n## SearchFiles.php\r\n\r\nUsed to find files given on specific parameters\r\n\r\n### Parameters\r\n\r\n#### Required\r\n\r\n- `detectorid` - A four digit code that's unique to every detector, example `6147`.\r\n- `year` - Must be one year at a time, example `2010`.\r\n\r\nEither one Month and Day:\r\n\r\n- `monthday` - A four digit number where the first two digits represent the month and the last two represent the day, example `0204`\r\n\r\nOr a range of months/days\r\n\r\n- `startmonthday` - The first monthday to include in the range\r\n- `endmonthday` - The last monthday to include in the range\r\n\r\n#### Optional parameters\r\n\r\n- `index` - Only look for specific indexes of a data file\r\n- `filetype` - Only look for specific file types\r\n\r\nCommone file types include:\r\n\r\n- raw - Note: Raw is not .raw but for example `6179.2008.0313.3`\r\n- thresh\r\n- bless\r\n- analyze\r\n- geo\r\n\r\n### Example response\r\n\r\n```\r\n{\r\n\trequest: {\r\n\t\tpass: \"true\"\r\n\t},\r\n\tmain: {\r\n\t\tsearchfiles: \"true\"\r\n\t},\r\n\tfilelist: [\r\n\t\t{\r\n\t\t\tfileid: \"4604\",\r\n\t\t\tdetectorid: \"6147\",\r\n\t\t\tyear: \"2010\",\r\n\t\t\tmonthday: \"415\",\r\n\t\t\tindex: \"0\",\r\n\t\t\tfiletype: \"raw \"\r\n\t\t},\r\n\t\t{\r\n\t\t\tfileid: \"4605\",\r\n\t\t\tdetectorid: \"6147\",\r\n\t\t\tyear: \"2010\",\r\n\t\t\tmonthday: \"415\",\r\n\t\t\tindex: \"0\",\r\n\t\t\tfiletype: \"thresh \"\r\n\t\t}\r\n\t],\r\n\tnumberOfFiles: 2,\r\n\tlimit: 500\r\n}\r\n```\r\n\r\n## FileInfo.php\r\n\r\nUsed to retrieve information about a particular file. Can also be used to make sure the file is on the disk before actually downloading it. The ouput includes if it was found, and if it was, providing information about the file like the DetectorID, Year, MonthDay, Index, and FileType.\r\n\r\n### Parameters\r\n\r\n#### Required\r\n\r\n- `detectorid` - A four digit code that's unique to every detector, example `6147`\r\n- `year` - Must be one year at a time, example `2010`\r\n- `monthday` - A four digit number where the first two digits represent the month and the last two represent the day, example `0204`\r\n- `index` - A specific index of a file, example `0`\r\n- `filetype` - The file type of the file, example `thresh`\r\n\r\nOr\r\n\r\n- `fileid` - given from a searchfiles.php query, this is just a more convenient way of downloading the file\r\n\r\n### Example Response\r\n\r\n```\r\n{\r\n\trequest: {\r\n\t\tpass: \"true\"\r\n\t},\r\n\tmain: {\r\n\t\tfilefound: \"true\",\r\n\t\tfileinfo: {\r\n\t\t\tfileid: \"4576\",\r\n\t\t\tdetectorid: \"6147\",\r\n\t\t\tyear: \"2010\",\r\n\t\t\tmonthday: \"0404\",\r\n\t\t\tindex: \"0\",\r\n\t\t\tfiletype: \"raw\"\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n## GetFile.php\r\n\r\nThis script will allow you to download a given file provided it's unquie parameters. This file has been created so it allows you to download the data file keeping it's filename intact.\r\n\r\n### Parameters\r\n\r\n- `detectorid` - A four digit code that's unique to every detector, example `6147`\r\n- `year` - Must be one year at a time, example `2010`\r\n- `monthday` - A four digit number where the first two digits represent the month and the last two represent the day, example `0204`\r\n- `index` - A specific index of a file, example `0`\r\n- `filetype` - The file type of the file, example `thresh`\r\n\r\nOr\r\n\r\n- `fileid` - given from a searchfiles.php query, this is just a more convenient way of downloading the file\r\n\r\n# Issues & Feature Requests\r\n\r\nSubmit an issue or a feature request [here](https://github.com/onlineth/Cosmic-eLab-API/issues). Also, feel free to fork, improve, and submit a pull request if you'd like help out on this project.\r\n\r\n# License\r\n\r\nLicensed under the [GNU AFFERO GENERAL PUBLIC LICENSE](https://github.com/onlineth/Cosmic-eLab-API/blob/master/LICENSE)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}